@use "../styles/vars" as *;

div.proton.progress-bar {
	// Box
	min-width: 1px;
	// min-height: 1px;
	width: 100%;

	// min-height: 6rem;
	height: max-content;
	overflow: hidden;
	position: relative;

	// Border
	border-radius: $border-radius;
	border: $border;
	border-color: map-get($colors, "default");
	border-width: 0;
	&[border] {
		border-width: $border-width;
	}

	// Transition
	transition: $transition-fast;

	// Color
	background: map-get($colors, "default");
	color: $text-color-alt;
	@each $key, $value in $emphasis {
		&[emphasis="#{$key}"] {
			border-color: $value;

			div.proton.fill {
				background: $value;
				// border-color: $value;
			}

			div.proton.spacer {
				background: $text-color-alt;
			}

			&[overlay] {
				div.proton.spacer {
					background: $value;
				}
			}
		}
	}

	@each $key, $value in $colors {
		&[color="#{$key}"] {
			border-color: $value;

			div.proton.fill {
				background: $value;
				// border-color: $value;
			}

			div.proton.spacer {
				background: $text-color-alt;
			}

			&[overlay] {
				div.proton.spacer {
					background: $value;
				}
			}
		}
	}

	// Spacer
	div.proton.spacer {
		height: 50%;
		flex-grow: 2;
		min-width: 1px;
		min-height: 0.25rem;
		max-height: 1rem;
		border-radius: $border-radius-circular;

		&[invisible] {
			opacity: 0;
		}
	}

	// Filled Overlay
	&[overlay] {
		div.proton.overlay {
			background: $text-color-alt;
			mix-blend-mode: screen;

			&[backline] {
				&::after {
					background: $text-color;
				}
			}

			div.proton.children,
			div.proton.percentage {
				color: $text-color;
			}

			div.proton.spacer {
				background: $text-color;
			}

			div.proton.dot {
				border-color: $text-color;

				&[hollow] {
					&::after {
						background: $text-color-alt;
					}
				}
			}
		}
	}

	div.proton.fill {
		// Box
		width: 0%;
		height: 100%;
		padding: $padding;
		position: absolute;
		top: 0;
		left: 0;

		// Border
		border-top-right-radius: calc($border-radius / 2);
		border-bottom-right-radius: calc($border-radius / 2);
		// border: $border;
		// border-color: map-get($colors, "red");

		// Transition
		transition: $transition-fast;

		// Color
		background: map-get($colors, "default");
	}

	div.proton.overlay {
		// Box
		// position: absolute;
		// top: 0;
		// left: 0;
		width: 100%;
		height: 100%;
		min-height: max-content;
		padding: $padding;

		position: relative;

		// Flexbox
		display: flex;
		flex-direction: row;
		align-items: center;
		gap: $padding;

		// Children
		div.proton.children {
			// Flex
			flex-grow: 2;
			display: flex;
			gap: $padding;
			align-items: center;
			justify-content: space-evenly;

			// Box
			width: 100%;
			// height: max-content;
			min-height: max-content;
			height: 100%;

			// padding: $padding;
		}

		// Percentage Display
		div.proton.percentage {
			font-weight: bolder;
			color: inherit;

			// position: absolute;
			// top: 50%;
			// transform: translateY(-50%);

			&:first-child {
				left: $padding;
			}

			&:last-child {
				right: $padding;
			}
		}

		// Labels
		div.proton.label {
			// Box
			height: 100%;

			// Flexbox
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
		}

		// Dots
		div.proton.dot {
			// Box
			width: 1rem;
			height: 1rem;

			position: relative;

			// Border
			border: $border;
			border-radius: $border-radius-icon-circular;
			border-color: $text-color-alt;
			border-width: $padding;

			// Color
			background: $text-color-alt;

			// Hollow
			&[hollow] {
				padding: calc($padding / 2);
				border-width: calc($padding / 2);
				background: none;

				&::after {
					content: "";

					pointer-events: none;

					// background: map-get($colors, "default");

					width: $padding;
					height: $padding;

					border-radius: $border-radius-icon-circular;

					position: absolute;
					top: 0;
					left: 0;
					z-index: 1;
				}
			}
		}

		// Backline
		&[backline] {
			&::after {
				content: "";
				background: $text-color-alt;
				width: 95%;
				height: 0.25rem;
				border-radius: $border-radius-circular;

				position: absolute;
				top: calc($padding + 0.375rem);
				left: 2.5%;
			}
		}
	}
}
