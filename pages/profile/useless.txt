import { baseURL } from "../util/baseURL";
import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import Tabs from "../../components/Tabs";
import axios from "axios";
import Cookies from "js-cookie";
import getSquad from "../util/getSquad";
import styles from "../../styles/Pages/Profile.module.scss";

const Profile = ({  user: { _id }, user: currentUser }) => {

  const router = useRouter();
	const { id } = router.query;
	const token = Cookies.get("token");

	const [loading, setLoading] = useState(false);
  const [squads, setSquads] = useState([]);

	const getUser = async (userId) => {
		try {
			const res = await axios.get(
				`/api/v1/user/${userId}`,
				{
					headers: {
						authorization: `Bearer ${token}`,
					},
				}
			);

			console.log(`This is whats returned: ${res.data}`);

			return res.data;
		} catch (err) {
			console.error(`Failed to get user with ID:`, userId, err);

			return null;
		}
	};

  getUser(id)

  const [user, setUser] = useState(null);

  // const reloadSquads = async (body) => {
  //   if (!body || !body.squadNumber) return;

  //   const { squadNumber } = body;
  //   if (squadNumber) {
  //     // let squads = squadNumber;
  //     let squads = [];

  //     for (let num of squadNumber) {
  //       const squad = await getSquad(num);

  //       let newOfficers = [];

  //       for (let officer of squad.officers) {
  //         const newOfficer = await getUser(officer);

  //         newOfficers.push(newOfficer);
  //       }

  //       squad.officers = newOfficers;
  //       if (squad) squads.push(squad);
  //     }

  //     setSquads(squads);
  //   } else {
  //     return;
  //   }
  // };

  useEffect(async () => {
    setLoading(true);
    // reloadSquads(await getUser(id));
		setUser(await getUser(id));
		setLoading(false);
  }, []);

  console.log(user);

  return (
    <main className={styles.container}>
      {/* <div className={styles.user}>
        <div
          className={styles.pfp}
          style={
            user.profilePicURL && {
              backgroundImage: `url("${user.profilePicURL}")`,
            }
          }
        >
        </div>
        <div className={styles.banner}>
          <img />
        </div>
        <Tabs lastName={lastName} badgeNum={badgeNumber} email={email} rank={rank} />
      </div> */}

      {/* <div className={styles.display}>
        {squads.length < 1 && (
          <h3 className={styles.noMsg}>No Squads to Display</h3>
        )}
        {squads.map((squad) => {
          const { _id, squadName, squadNumber, officers } = squad;

          if (officers[0] && squadNumber == user.squadNumber[0]) {
            return officers.map((officer) => {
              const {
                name: { firstName, lastName },
                rank,
                badgeNumber,
                _id,
                profilePicURL,
                email,
              } = officer;

              return (
                <div className={styles.classmate}>
                  <h1>{`${firstName} ${lastName}, email: ${squadNumber}`}</h1>
                </div>
              );
            });
          }
        })}
      </div> */}
      <a href="http://localhost:3000/emailVefPage">Verfiy Your Email</a>
    </main>
  );
};

// Profile.getInitialProps = async (ctx) => {
//   try {
//     const { email: email } = ctx.query;
//     const { token } = parseCookies(ctx);
//     const res = await axios.get(`${baseURL}/api/v1/user/${email}`, {
//       headers: { Authorization: `Bearer ${token}` },
//     });

//     const user  = res.data;
//     return { user };
//   } catch (error) {
//     return { errorLoading: true };
//   }
// };

export default Profile;
